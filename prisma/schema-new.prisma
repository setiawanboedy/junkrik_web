// Model untuk Schedule
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  password    String
  businessName String
  address     String
  phone       String
  wasteType   String?
  wasteVolume Int?
  role        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  schedules   Schedule[]
  reports     Report[]
}

model Schedule {
  id          String   @id @default(uuid())
  userId      String
  dayOfWeek   Int      // 0=Sunday, 1=Monday, etc.
  time        String   // Format: "HH:MM"
  isActive    Boolean  @default(true)
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  pickups     Pickup[]
}

model Pickup {
  id          String   @id @default(uuid())
  scheduleId  String
  scheduledDate DateTime
  actualDate  DateTime?
  status      String   @default("scheduled") // scheduled, in_progress, completed, cancelled
  wasteCollected Float? // kg
  notes       String?
  driverName  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  schedule    Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
}

model Report {
  id          String   @id @default(uuid())
  userId      String
  month       Int
  year        Int
  totalWaste  Float    @default(0) // kg
  recycledWaste Float  @default(0) // kg
  organicWaste Float   @default(0) // kg
  plasticCredits Float @default(0) // kg
  carbonReduction Float @default(0) // kg CO2
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, month, year])
}
